<Project>
	<PropertyGroup>
		<Product>MGR.CommandLineParser</Product>
		<TargetFramework>netstandard2.0</TargetFramework>
		<DocumentationFile>bin\$(Configuration)\netstandard2.0\$(MSBuildProjectName).xml</DocumentationFile>
		<LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
		<TreatWarningsAsErrors>true</TreatWarningsAsErrors>
		<GenerateAssemblyTitleAttribute>false</GenerateAssemblyTitleAttribute>
		<GenerateAssemblyDescriptionAttribute>false</GenerateAssemblyDescriptionAttribute>
		<WarningsAsErrors />
		<DebugType>portable</DebugType>
		<IsPackable>true</IsPackable>
		<ImplicitUsings>enable</ImplicitUsings>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>

		<Authors>Matthias GROSPERRIN</Authors>
		<Company></Company>
		<PackageProjectUrl>https://github.com/mgrosperrin/commandlineparser</PackageProjectUrl>
		<RepositoryUrl>https://github.com/mgrosperrin/commandlineparser</RepositoryUrl>
		<Description>MGR.CommandLineParser is a multi-command line parser. It uses System.ComponentModel.DataAnnotations to declare the commands.</Description>
		<RepositoryType>git</RepositoryType>
		<Copyright>Copyright © Matthias GROSPERRIN</Copyright>
		<NeutralLanguage>en-US</NeutralLanguage>
		<PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<VSTestLogger>trx%3bLogFileName=$(MSBuildProjectName).trx</VSTestLogger>
		<VSTestResultsDirectory>$(MSBuildThisFileDirectory)/TestResults/$(TargetFramework)</VSTestResultsDirectory>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
		<Optimize>true</Optimize>
	</PropertyGroup>

</Project>